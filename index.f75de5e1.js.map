{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst headers = document.querySelectorAll('th');\nconst rows = Array.from(table.querySelectorAll('tbody tr'));\nconst tbody = table.querySelector('tbody');\n\nlet isAscending = true;\nlet currentSortIndex = -1;\n\nconst sortTable = (index) => {\n  rows.sort((rowA, rowB) => {\n    const cellA = rowA.cells[index].innerText.trim();\n    const cellB = rowB.cells[index].innerText.trim();\n\n    switch (index) {\n      case 3:\n        return isAscending ? cellA - cellB : cellB - cellA;\n\n      case 4:\n        const sallaryA = parseFloat(cellA.replace(/[^0-9.-]+/g, ''));\n        const sallaryB = parseFloat(cellB.replace(/[^0-9.-]+/g, ''));\n\n        return isAscending ? sallaryA - sallaryB : sallaryB - sallaryA;\n\n      default:\n        return isAscending\n          ? cellA.localeCompare(cellB)\n          : cellB.localeCompare(cellA);\n    }\n  });\n\n  tbody.innerHTML = '';\n  rows.forEach((row) => tbody.appendChild(row));\n};\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    isAscending = !header.classList.toggle('asc');\n\n    headers.forEach((h, i) => {\n      if (i !== index) {\n        h.classList.remove('asc', 'desc');\n      }\n    });\n    currentSortIndex = index;\n    sortTable(index);\n  });\n});\n\ntable.addEventListener('click', (e) => {\n  const selectedRow = e.target.closest('tbody tr');\n\n  if (selectedRow) {\n    document\n      .querySelectorAll('tbody tr')\n      .forEach((row) => row.classList.remove('active'));\n\n    selectedRow.classList.add('active');\n  }\n});\n\nconst dataAttributes = ['name', 'position', 'office', 'age', 'salary'];\nconst form = document.createElement('form');\nconst button = document.createElement('button');\n\nform.classList.add('new-employee-form');\nbutton.type = 'submit';\nbutton.textContent = 'Save to table';\n\nconst capitalizeFirstLetter = (text) =>\n  text.charAt(0).toUpperCase() + text.slice(1).toLowerCase().trim();\n\nconst handleAddInput = () => {\n  dataAttributes.forEach((attribute) => {\n    const label = document.createElement('label');\n    const input = document.createElement('input');\n\n    label.textContent = capitalizeFirstLetter(`${attribute}:`);\n\n    if (attribute === 'office') {\n      const select = document.createElement('select');\n\n      const cities = [\n        'Tokyo',\n        'Singapore',\n        'London',\n        'New York',\n        'Edinburgh',\n        'San Francisco',\n      ];\n\n      cities.forEach((city) => {\n        const option = document.createElement('option');\n\n        option.value = city;\n        option.textContent = city;\n        select.appendChild(option);\n      });\n      select.name = attribute;\n      select.dataset.qa = attribute;\n      label.textContent = capitalizeFirstLetter(`${attribute}:`);\n      label.appendChild(select);\n    } else {\n      input.type = ['age', 'salary'].includes(attribute) ? 'number' : 'text';\n      input.name = attribute;\n      input.dataset.qa = attribute;\n\n      input.addEventListener('input', () => {\n        input.value = capitalizeFirstLetter(input.value);\n      });\n      label.appendChild(input);\n    }\n\n    form.appendChild(label);\n  });\n};\n\nconst showNotification = (message, isSuccess) => {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${isSuccess ? 'success' : 'error'}`;\n  notification.setAttribute('data-qa', 'notification');\n  notification.textContent = message;\n  document.body.appendChild(notification);\n  setTimeout(() => notification.remove(), 3000);\n};\n\nconst handleAddEmployee = (e) => {\n  e.preventDefault();\n\n  const fullName = form.querySelector('input[name=\"name\"]');\n  const positionInput = form.querySelector('input[name=\"position\"]');\n  const officeSelect = form.querySelector('select[name=\"office\"]');\n  const ageInput = form.querySelector('input[name=\"age\"]');\n  const salaryInput = form.querySelector('input[name=\"salary\"]');\n\n  const employeeName = fullName.value.trim();\n  const position = positionInput.value.trim();\n  const office = officeSelect.value;\n  const age = parseInt(ageInput.value, 10);\n  const salary = parseFloat(salaryInput.value);\n\n  const warnings = [];\n\n  if (employeeName.length < 4) {\n    warnings.push('Name must be at least 4 characters long.');\n  }\n\n  if (!position) {\n    warnings.push('Position is required.');\n  }\n\n  if (age < 18 || age > 90 || isNaN(age)) {\n    warnings.push('Age must be a number between 18 and 90.');\n  }\n\n  if (isNaN(salary) || salary <= 0) {\n    warnings.push('Salary must be a positive number.');\n  }\n\n  if (warnings.length > 0) {\n    return showNotification(warnings.join('\\n'), false);\n  }\n\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>${employeeName}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>$${salary.toLocaleString('en-US')}</td>`;\n\n  rows.push(newRow);\n\n  if (currentSortIndex !== -1) {\n    sortTable(currentSortIndex);\n  } else {\n    tbody.appendChild(newRow);\n  }\n\n  showNotification('Employee added successfully!', true);\n  form.reset();\n};\n\ntbody.addEventListener('dblclick', (e) => {\n  const target = e.target;\n\n  if (target.tagName !== 'TD') {\n    return;\n  }\n\n  const originalText = target.textContent;\n  const input = document.createElement('input');\n\n  input.type = 'text';\n  input.className = 'cell-input';\n  input.value = originalText;\n  target.textContent += ' replaced by:';\n  target.appendChild(input);\n  input.focus();\n\n  const saveEdit = () => {\n    const newValue = input.value.trim();\n\n    if (newValue) {\n      target.textContent = newValue;\n    } else {\n      target.textContent = originalText;\n    }\n\n    input.remove();\n  };\n\n  input.addEventListener('blur', saveEdit);\n\n  input.addEventListener('keydown', (action) => {\n    if (action.key === 'Enter') {\n      saveEdit();\n    }\n  });\n});\n\nhandleAddInput();\nform.appendChild(button);\ndocument.body.appendChild(form);\n\nform.addEventListener('submit', handleAddEmployee);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}