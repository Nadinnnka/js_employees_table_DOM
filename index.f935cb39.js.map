{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar headers = document.querySelectorAll(\"th\");\nvar rows = Array.from(table.querySelectorAll(\"tbody tr\"));\nvar tbody = table.querySelector(\"tbody\");\nvar isAscending = true;\nvar currentSortIndex = -1;\nvar sortTable = function(index) {\n    rows.sort(function(rowA, rowB) {\n        var cellA = rowA.cells[index].innerText.trim();\n        var cellB = rowB.cells[index].innerText.trim();\n        switch(index){\n            case 3:\n                return isAscending ? cellA - cellB : cellB - cellA;\n            case 4:\n                var sallaryA = parseFloat(cellA.replace(/[^0-9.-]+/g, \"\"));\n                var sallaryB = parseFloat(cellB.replace(/[^0-9.-]+/g, \"\"));\n                return isAscending ? sallaryA - sallaryB : sallaryB - sallaryA;\n            default:\n                return isAscending ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);\n        }\n    });\n    tbody.innerHTML = \"\";\n    rows.forEach(function(row) {\n        return tbody.appendChild(row);\n    });\n};\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        isAscending = !header.classList.toggle(\"asc\");\n        headers.forEach(function(h, i) {\n            if (i !== index) h.classList.remove(\"asc\", \"desc\");\n        });\n        currentSortIndex = index;\n        sortTable(index);\n    });\n});\ntable.addEventListener(\"click\", function(e) {\n    var selectedRow = e.target.closest(\"tbody tr\");\n    if (selectedRow) {\n        document.querySelectorAll(\"tbody tr\").forEach(function(row) {\n            return row.classList.remove(\"active\");\n        });\n        selectedRow.classList.add(\"active\");\n    }\n});\nvar dataAttributes = [\n    \"name\",\n    \"position\",\n    \"office\",\n    \"age\",\n    \"salary\"\n];\nvar form = document.createElement(\"form\");\nvar button = document.createElement(\"button\");\nform.classList.add(\"new-employee-form\");\nbutton.type = \"submit\";\nbutton.textContent = \"Save to table\";\nvar capitalizeFirstLetter = function(text) {\n    return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase().trim();\n};\nvar handleAddInput = function() {\n    dataAttributes.forEach(function(attribute) {\n        var label = document.createElement(\"label\");\n        var input = document.createElement(\"input\");\n        label.textContent = capitalizeFirstLetter(\"\".concat(attribute, \":\"));\n        if (attribute === \"office\") {\n            var select = document.createElement(\"select\");\n            var cities = [\n                \"Tokyo\",\n                \"Singapore\",\n                \"London\",\n                \"New York\",\n                \"Edinburgh\",\n                \"San Francisco\"\n            ];\n            cities.forEach(function(city) {\n                var option = document.createElement(\"option\");\n                option.value = city;\n                option.textContent = city;\n                select.appendChild(option);\n            });\n            select.name = attribute;\n            select.dataset.qa = attribute;\n            label.textContent = capitalizeFirstLetter(\"\".concat(attribute, \":\"));\n            label.appendChild(select);\n        } else {\n            input.type = [\n                \"age\",\n                \"salary\"\n            ].includes(attribute) ? \"number\" : \"text\";\n            input.name = attribute;\n            input.dataset.qa = attribute;\n            input.addEventListener(\"input\", function() {\n                input.value = capitalizeFirstLetter(input.value);\n            });\n            label.appendChild(input);\n        }\n        form.appendChild(label);\n    });\n};\nvar showNotification = function(message, isSuccess) {\n    var notification = document.createElement(\"div\");\n    notification.className = \"notification \".concat(isSuccess ? \"success\" : \"error\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.textContent = message;\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        return notification.remove();\n    }, 3000);\n};\nvar handleAddEmployee = function(e) {\n    e.preventDefault();\n    var fullName = form.querySelector('input[name=\"name\"]');\n    var positionInput = form.querySelector('input[name=\"position\"]');\n    var officeSelect = form.querySelector('select[name=\"office\"]');\n    var ageInput = form.querySelector('input[name=\"age\"]');\n    var salaryInput = form.querySelector('input[name=\"salary\"]');\n    var employeeName = fullName.value.trim();\n    var position = positionInput.value.trim();\n    var office = officeSelect.value;\n    var age = parseInt(ageInput.value, 10);\n    var salary = parseFloat(salaryInput.value);\n    var warnings = [];\n    if (employeeName.length < 4) warnings.push(\"Name must be at least 4 characters long.\");\n    if (!position) warnings.push(\"Position is required.\");\n    if (age < 18 || age > 90 || isNaN(age)) warnings.push(\"Age must be a number between 18 and 90.\");\n    if (isNaN(salary) || salary <= 0) warnings.push(\"Salary must be a positive number.\");\n    if (warnings.length > 0) return showNotification(warnings.join(\"\\n\"), false);\n    var newRow = document.createElement(\"tr\");\n    newRow.innerHTML = \"\\n    <td>\".concat(employeeName, \"</td>\\n    <td>\").concat(position, \"</td>\\n    <td>\").concat(office, \"</td>\\n    <td>\").concat(age, \"</td>\\n    <td>$\").concat(salary.toLocaleString(\"en-US\"), \"</td>\");\n    rows.push(newRow);\n    if (currentSortIndex !== -1) sortTable(currentSortIndex);\n    else tbody.appendChild(newRow);\n    showNotification(\"Employee added successfully!\", true);\n    form.reset();\n};\ntbody.addEventListener(\"dblclick\", function(e) {\n    var target = e.target;\n    if (target.tagName !== \"TD\") return;\n    var originalText = target.textContent;\n    var input = document.createElement(\"input\");\n    input.type = \"text\";\n    input.className = \"cell-input\";\n    input.value = originalText;\n    target.textContent += \" replaced by:\";\n    target.appendChild(input);\n    input.focus();\n    var saveEdit = function() {\n        var newValue = input.value.trim();\n        if (newValue) target.textContent = newValue;\n        else target.textContent = originalText;\n        input.remove();\n    };\n    input.addEventListener(\"blur\", saveEdit);\n    input.addEventListener(\"keydown\", function(action) {\n        if (action.key === \"Enter\") saveEdit();\n    });\n});\nhandleAddInput();\nform.appendChild(button);\ndocument.body.appendChild(form);\nform.addEventListener(\"submit\", handleAddEmployee);\n\n//# sourceMappingURL=index.f935cb39.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst headers = document.querySelectorAll('th');\nconst rows = Array.from(table.querySelectorAll('tbody tr'));\nconst tbody = table.querySelector('tbody');\n\nlet isAscending = true;\nlet currentSortIndex = -1;\n\nconst sortTable = (index) => {\n  rows.sort((rowA, rowB) => {\n    const cellA = rowA.cells[index].innerText.trim();\n    const cellB = rowB.cells[index].innerText.trim();\n\n    switch (index) {\n      case 3:\n        return isAscending ? cellA - cellB : cellB - cellA;\n\n      case 4:\n        const sallaryA = parseFloat(cellA.replace(/[^0-9.-]+/g, ''));\n        const sallaryB = parseFloat(cellB.replace(/[^0-9.-]+/g, ''));\n\n        return isAscending ? sallaryA - sallaryB : sallaryB - sallaryA;\n\n      default:\n        return isAscending\n          ? cellA.localeCompare(cellB)\n          : cellB.localeCompare(cellA);\n    }\n  });\n\n  tbody.innerHTML = '';\n  rows.forEach((row) => tbody.appendChild(row));\n};\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    isAscending = !header.classList.toggle('asc');\n\n    headers.forEach((h, i) => {\n      if (i !== index) {\n        h.classList.remove('asc', 'desc');\n      }\n    });\n    currentSortIndex = index;\n    sortTable(index);\n  });\n});\n\ntable.addEventListener('click', (e) => {\n  const selectedRow = e.target.closest('tbody tr');\n\n  if (selectedRow) {\n    document\n      .querySelectorAll('tbody tr')\n      .forEach((row) => row.classList.remove('active'));\n\n    selectedRow.classList.add('active');\n  }\n});\n\nconst dataAttributes = ['name', 'position', 'office', 'age', 'salary'];\nconst form = document.createElement('form');\nconst button = document.createElement('button');\n\nform.classList.add('new-employee-form');\nbutton.type = 'submit';\nbutton.textContent = 'Save to table';\n\nconst capitalizeFirstLetter = (text) =>\n  text.charAt(0).toUpperCase() + text.slice(1).toLowerCase().trim();\n\nconst handleAddInput = () => {\n  dataAttributes.forEach((attribute) => {\n    const label = document.createElement('label');\n    const input = document.createElement('input');\n\n    label.textContent = capitalizeFirstLetter(`${attribute}:`);\n\n    if (attribute === 'office') {\n      const select = document.createElement('select');\n\n      const cities = [\n        'Tokyo',\n        'Singapore',\n        'London',\n        'New York',\n        'Edinburgh',\n        'San Francisco',\n      ];\n\n      cities.forEach((city) => {\n        const option = document.createElement('option');\n\n        option.value = city;\n        option.textContent = city;\n        select.appendChild(option);\n      });\n      select.name = attribute;\n      select.dataset.qa = attribute;\n      label.textContent = capitalizeFirstLetter(`${attribute}:`);\n      label.appendChild(select);\n    } else {\n      input.type = ['age', 'salary'].includes(attribute) ? 'number' : 'text';\n      input.name = attribute;\n      input.dataset.qa = attribute;\n\n      input.addEventListener('input', () => {\n        input.value = capitalizeFirstLetter(input.value);\n      });\n      label.appendChild(input);\n    }\n\n    form.appendChild(label);\n  });\n};\n\nconst showNotification = (message, isSuccess) => {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${isSuccess ? 'success' : 'error'}`;\n  notification.setAttribute('data-qa', 'notification');\n  notification.textContent = message;\n  document.body.appendChild(notification);\n  setTimeout(() => notification.remove(), 3000);\n};\n\nconst handleAddEmployee = (e) => {\n  e.preventDefault();\n\n  const fullName = form.querySelector('input[name=\"name\"]');\n  const positionInput = form.querySelector('input[name=\"position\"]');\n  const officeSelect = form.querySelector('select[name=\"office\"]');\n  const ageInput = form.querySelector('input[name=\"age\"]');\n  const salaryInput = form.querySelector('input[name=\"salary\"]');\n\n  const employeeName = fullName.value.trim();\n  const position = positionInput.value.trim();\n  const office = officeSelect.value;\n  const age = parseInt(ageInput.value, 10);\n  const salary = parseFloat(salaryInput.value);\n\n  const warnings = [];\n\n  if (employeeName.length < 4) {\n    warnings.push('Name must be at least 4 characters long.');\n  }\n\n  if (!position) {\n    warnings.push('Position is required.');\n  }\n\n  if (age < 18 || age > 90 || isNaN(age)) {\n    warnings.push('Age must be a number between 18 and 90.');\n  }\n\n  if (isNaN(salary) || salary <= 0) {\n    warnings.push('Salary must be a positive number.');\n  }\n\n  if (warnings.length > 0) {\n    return showNotification(warnings.join('\\n'), false);\n  }\n\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>${employeeName}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>$${salary.toLocaleString('en-US')}</td>`;\n\n  rows.push(newRow);\n\n  if (currentSortIndex !== -1) {\n    sortTable(currentSortIndex);\n  } else {\n    tbody.appendChild(newRow);\n  }\n\n  showNotification('Employee added successfully!', true);\n  form.reset();\n};\n\ntbody.addEventListener('dblclick', (e) => {\n  const target = e.target;\n\n  if (target.tagName !== 'TD') {\n    return;\n  }\n\n  const originalText = target.textContent;\n  const input = document.createElement('input');\n\n  input.type = 'text';\n  input.className = 'cell-input';\n  input.value = originalText;\n  target.textContent += ' replaced by:';\n  target.appendChild(input);\n  input.focus();\n\n  const saveEdit = () => {\n    const newValue = input.value.trim();\n\n    if (newValue) {\n      target.textContent = newValue;\n    } else {\n      target.textContent = originalText;\n    }\n\n    input.remove();\n  };\n\n  input.addEventListener('blur', saveEdit);\n\n  input.addEventListener('keydown', (action) => {\n    if (action.key === 'Enter') {\n      saveEdit();\n    }\n  });\n});\n\nhandleAddInput();\nform.appendChild(button);\ndocument.body.appendChild(form);\n\nform.addEventListener('submit', handleAddEmployee);\n"],"names":["table","document","querySelector","headers","querySelectorAll","rows","Array","from","tbody","isAscending","currentSortIndex","sortTable","index","sort","rowA","rowB","cellA","cells","innerText","trim","cellB","sallaryA","parseFloat","replace","sallaryB","localeCompare","innerHTML","forEach","row","appendChild","header","addEventListener","classList","toggle","h","i","remove","e","selectedRow","target","closest","add","form","createElement","button","type","textContent","capitalizeFirstLetter","text","charAt","toUpperCase","slice","toLowerCase","showNotification","message","isSuccess","notification","className","concat","setAttribute","body","setTimeout","tagName","originalText","input","value","focus","saveEdit","newValue","action","key","dataAttributes","attribute","label","select","cities","city","option","name","dataset","qa","includes","preventDefault","fullName","positionInput","officeSelect","ageInput","salaryInput","employeeName","position","office","age","parseInt","salary","warnings","length","push","isNaN","join","newRow","toLocaleString","reset"],"version":3,"file":"index.f935cb39.js.map"}